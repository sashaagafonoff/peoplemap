:javascript
  $(function() {
    $("#accordion").accordion();
  });

<!-- ideally this will show the user's most recent nodes first, so that nodes of interest will be presented first.  second, presenting related nodes should also be useful, given
it makes sense that users will be focussed on communities/networks of interest and would want ready access to existing/known connections' -->
%h2
  Link Records
%div{:class=>"general_explanation",:style=>"margin:0;"}
  %img{:src=>"/images/icons/info.png",:alt=>"Info icon",:height=>"42",:width=>"43"}
  This panel allows you to search for records in the database and link to them from the current record (
  = get_display_name(@object)
  ).
  At the moment this panel lists every single node in the database, but in future it will provide a search function that will list matching results ordered by node type.
%div{:id=>"accordion"}
  %h3
    <a href="#">people</a>
  %div{:class => "all_nodes_list"}
    %span{:class => "new_node_link"}
      = link_to '[+] Add a new person to the system', new_person_path, :title => "Add a New Person"
    %table{:cellpadding => "0", :cellspacing => "0", :border => "0", :width => "100%"}
      - @people.each do |person|
        - if (person.neo_id != object.neo_id) then
          %tr{:class => cycle('list_odd', 'list_even'), :id => person.neo_id}
            = render( :partial => "shared/relationship_form", :object => object, :locals => {:link_category_table => get_type_list(object.class.to_s.downcase, "person",get_gender(object)), :target => person, :origin_type => object.class.to_s.downcase, :target_type => "person"})

  %h3
    <a href="#">organisations</a>
  %div{:class => "all_nodes_list"}
    %span{:class => "new_node_link"}
      = link_to '[+] Add a new organisation to the system', new_organisation_path, :title => "Add a New Organisation"
    %table{:cellpadding => "0", :cellspacing => "0", :border => "0", :width => "100%"}
      - @organisations.each do |organisation|
        - if (organisation.neo_id != object.neo_id) then
          %tr{:class => cycle('list_odd', 'list_even'), :id => organisation.neo_id}
            = render( :partial => "shared/relationship_form", :object => object, :locals => {:link_category_table => get_type_list(object.class.to_s.downcase, "organisation","neutral"), :target => organisation, :origin_type => object.class.to_s.downcase, :target_type => "organisation"})

  %h3
    <a href="#">locations</a>
  %div{:class => "all_nodes_list"}
    %span{:class => "new_node_link"}
      = link_to '[+] Add a new location to the system', new_location_path, :title => "Add a New Location"
    %table{:cellpadding => "0", :cellspacing => "0", :border => "0", :width => "100%"}
      - @locations.each do |location|
        - if (location.neo_id != object.neo_id) then
          %tr{:class => cycle('list_odd', 'list_even'), :id => location.neo_id}
            = render( :partial => "shared/relationship_form", :object => object, :locals => {:link_category_table => get_type_list(object.class.to_s.downcase, "location","neutral"), :target => location, :origin_type => object.class.to_s.downcase, :target_type => "location"})
  %h3
    <a href="#">events</a>
  %div{:class => "all_nodes_list"}
    %span{:class => "new_node_link"}
      = link_to '[+] Add a new event to the system', new_event_path, :title => "Add a New Event"
    %table{:cellpadding => "0", :cellspacing => "0", :border => "0", :width => "100%"}
      - @events.each do |event|
        - if (event.neo_id != object.neo_id) then
          %tr{:class => cycle('list_odd', 'list_even'), :id => event.neo_id}
            = render( :partial => "shared/relationship_form", :object => object, :locals => {:link_category_table => get_type_list(object.class.to_s.downcase, "event","neutral"), :target => event, :origin_type => object.class.to_s.downcase, :target_type => "event"})

  %h3
    <a href="#">references</a>
  %div{:class => "all_nodes_list"}
    %span{:class => "new_node_link"}
      = link_to '[+] Add a new reference to the system', new_reference_path, :title => "Add a New Reference"
    %table{:cellpadding => "0", :cellspacing => "0", :border => "0", :width => "100%"}
      - @references.each do |reference|
        - if (reference.neo_id != object.neo_id) then
          %tr{:class => cycle('list_odd', 'list_even'), :id => reference.neo_id}
            = render( :partial => "shared/relationship_form", :object => object, :locals => {:link_category_table => get_type_list(object.class.to_s.downcase, "reference","neutral"), :target => reference, :origin_type => object.class.to_s.downcase, :target_type => "reference"})
